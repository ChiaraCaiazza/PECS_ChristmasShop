//
// Generated file, do not edit! Created by nedtool 4.6 from Customer.msg.
//

#ifndef _CAIAGINILLO_CUSTOMER_M_H_
#define _CAIAGINILLO_CUSTOMER_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace caiaginillo {

/**
 * Class generated from <tt>Customer.msg:4</tt> by nedtool.
 * <pre>
 * packet Customer
 * {
 *     simtime_t creationTime;
 *     simtime_t qct;
 *     simtime_t ct;
 *     simtime_t qwt;
 *     simtime_t wt;
 *     bool hasToWrap;
 *     bool checkedOut;
 * }
 * </pre>
 */
class Customer : public ::cPacket
{
  protected:
    simtime_t creationTime_var;
    simtime_t qct_var;
    simtime_t ct_var;
    simtime_t qwt_var;
    simtime_t wt_var;
    bool hasToWrap_var;
    bool checkedOut_var;

  private:
    void copy(const Customer& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Customer&);

  public:
    Customer(const char *name=NULL, int kind=0);
    Customer(const Customer& other);
    virtual ~Customer();
    Customer& operator=(const Customer& other);
    virtual Customer *dup() const {return new Customer(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual simtime_t getCreationTime() const;
    virtual void setCreationTime(simtime_t creationTime);
    virtual simtime_t getQct() const;
    virtual void setQct(simtime_t qct);
    virtual simtime_t getCt() const;
    virtual void setCt(simtime_t ct);
    virtual simtime_t getQwt() const;
    virtual void setQwt(simtime_t qwt);
    virtual simtime_t getWt() const;
    virtual void setWt(simtime_t wt);
    virtual bool getHasToWrap() const;
    virtual void setHasToWrap(bool hasToWrap);
    virtual bool getCheckedOut() const;
    virtual void setCheckedOut(bool checkedOut);
};

inline void doPacking(cCommBuffer *b, Customer& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Customer& obj) {obj.parsimUnpack(b);}

} // namespace caiaginillo

#endif // ifndef _CAIAGINILLO_CUSTOMER_M_H_

